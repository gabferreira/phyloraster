[{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://gabferreira.github.io/phyloraster/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://gabferreira.github.io/phyloraster/articles/phyloraster-vignette.html","id":"intro","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to the phyloraster package and its functionalities","text":"phyloraster R package calculate measures endemism evolutionary diversity using rasters presence-absence input, allowing join results derived species distribution models (SDMs) phylogenetic information. lot packages phyloregion (Daru et al., 2020), picante (Kembel et al., 2010) pez (Pearse et al. 2015) can used calculate patterns endemism evolutionary diversity. However, packages use matrices can computationally expensive user working global local data high resolution. phylorgid brings alternative packages providing functions calculate diversity endemism metrics raster cell, reducing amount RAM required data processing. functions focused steps pre-processing, processing post-processing macroecological phylogenetic data. pre-processing step offers basic functions preparing data running analyses. processing step brings together functions calculate Faith’s phylogenetic diversity, phylogenetic endemism, weighted endemism evolutionary distinctiveness. step also provides functions calculate standardized effect size metric different methods spatial phylogenetic randomization, aiming control richness effects. user can applying methods randomization test hypotheses community structure richness patterns correlated endemism evolutionary patterns (Kembel et al. 2010). post processing stage includes functions calculate delta metrics different times (e.g. present future). shown package slightly longer computation time comparable packages, takes considerably smaller portion RAM memory, allow users work high-resolution datasets local global scales. enhances application package enabling users work large datasets computers less RAM available. vignette, demonstrate use functions phyloraster package detail.","code":""},{"path":"https://gabferreira.github.io/phyloraster/articles/phyloraster-vignette.html","id":"install","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to the phyloraster package and its functionalities","text":"CRAN version package can installed using: development version phyloraster can downloaded GitHub using following code: questions, let us know topic “Issues”. phyloraster uses R packages dependencies terra (version >= 1.6) (Hijmans, 2022), ape (version >= 5.6) (Paradis & Schliep, 2019), phylobase (version >= 0.810) (Hackathon et al. 2020). installed, packages can loaded R using library():","code":"install.packages(\"phyloraster\") devtools::install_github(\"gabferreira/phyloraster\") library(phyloraster) library(terra) library(ape) library(phylobase)"},{"path":"https://gabferreira.github.io/phyloraster/articles/phyloraster-vignette.html","id":"data","dir":"Articles","previous_headings":"","what":"Data processing","title":"Introduction to the phyloraster package and its functionalities","text":"step pre processing, offer support manipulate matrices, shapefiles, rasters, phylogenetic trees. processing step, provide functions calculate Faith’s phylogenetic diversity (Faith, 1992), phylogenetic endemism (Rosauer et al., 2009), evolutionary distinctiveness (Isaac et al., 2007) weighted endemism (Williams et al., 1994). Dataset package contains one dataset allows visualizing structure expected matrices, rasters, shapefiles phylogenetic trees can accessed using function load.data.rosauer(). dataset contains data.frame presence records 33 Australian tree frogs coordinates site (Rosauer 2017) phylogenetic tree species (Rosauer 2017). raw dataset can accessed . function also provide binary raster presence absence shapefile range 27 species following IUCN spatial data.  Function df2rast function df2rast converts traditional communities matrices (.e. species columns sites rows, coordinates two first columns) binary distribution rasters (presence absence).  Function shp2rast shp2rast function transform shapefile raster stack extent. function allows work, example, shapes species distribution provided International Union Conservation Nature’s Spatial Database. provide set shapefiles 27 species Australian tree frogs. can visualize data following code:  Function phylo.pres calculate evolutionary measurements extremely important raster species distributions tree species names order. can verify premise using simple logical test like . function phylo.pres reorder raster stack according phylogenetic tree order, extract subtree containing species present raster stack get branch length species. Now, raster stack tip label tree order!","code":"data <- load.data.rosauer() head(data$presab) #>   Longitude Latitude Litoria_revelata Litoria_rothii Litoria_longirostris #> 1  144.0657  -14.894                0              1                    0 #> 2  144.0657  -15.194                0              1                    0 #> 3  144.0657  -16.694                0              1                    0 #> 4  144.0657  -15.494                0              1                    0 #> 5  144.0657  -16.294                0              1                    0 #> 6  144.0657  -16.594                0              1                    0 #>   Litoria_dorsalis Litoria_rubella Litoria_inermis Litoria_pallida #> 1                0               1               1               1 #> 2                0               1               1               1 #> 3                0               1               1               1 #> 4                0               1               1               1 #> 5                0               1               1               1 #> 6                0               1               1               1 #>   Litoria_latopalmata Litoria_tornieri Litoria_nasuta Litoria_nigrofrenata #> 1                   0                0              1                    0 #> 2                   0                0              1                    0 #> 3                   0                0              1                    0 #> 4                   0                0              1                    0 #> 5                   0                0              1                    0 #> 6                   0                0              1                    0 #>   Litoria_bicolor Litoria_fallax Litoria_genimaculata Litoria_wilcoxii #> 1               1              0                    0                0 #> 2               0              0                    0                0 #> 3               0              0                    0                0 #> 4               0              0                    0                0 #> 5               0              0                    0                0 #> 6               0              0                    0                0 #>   Litoria_jungguy Litoria_andiirrmalin Litoria_caerulea Litoria_chloris #> 1               0                    0                1               0 #> 2               0                    0                1               0 #> 3               0                    0                1               0 #> 4               0                    0                1               0 #> 5               0                    0                1               0 #> 6               0                    0                1               0 #>   Litoria_xanthomera Litoria_gracilenta Cyclorana_brevipes #> 1                  0                  0                  1 #> 2                  0                  0                  1 #> 3                  0                  0                  1 #> 4                  0                  1                  1 #> 5                  0                  0                  1 #> 6                  0                  0                  1 #>   Cyclorana_novaehollandiae Cyclorana_cultripes Cyclorana_manya #> 1                         1                   0               1 #> 2                         1                   0               0 #> 3                         1                   0               1 #> 4                         1                   0               1 #> 5                         1                   0               1 #> 6                         1                   0               1 #>   Litoria_alboguttata Cyclorana_longipes Nyctimystes_dayi Litoria_nannotis #> 1                   1                  0                0                0 #> 2                   1                  0                0                0 #> 3                   1                  0                0                0 #> 4                   1                  0                0                0 #> 5                   1                  0                0                0 #> 6                   1                  0                0                0 #>   Litoria_lorica Litoria_rheocola Litoria_nyakalensis Litoria_infrafrenata #> 1              0                0                   0                    0 #> 2              0                0                   0                    0 #> 3              0                0                   0                    0 #> 4              0                0                   0                    0 #> 5              0                0                   0                    0 #> 6              0                0                   0                    0 data$tree #>  #> Phylogenetic tree with 33 tips and 26 internal nodes. #>  #> Tip labels: #>   Litoria_revelata, Litoria_rothii, Litoria_longirostris, Litoria_dorsalis, Litoria_rubella, Litoria_nigrofrenata, ... #>  #> Rooted; includes branch lengths. plot(data$tree, cex = 0.65) data <- load.data.rosauer() r <- df2rast(x = data$presab, CRS = \"+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0\") class(r) #> [1] \"SpatRaster\" #> attr(,\"package\") #> [1] \"terra\" plot(r) shp <- terra::vect(system.file(\"extdata\", \"shps_iucn_spps_rosauer.shp\", package = \"phyloraster\")) colors <- rainbow(length(unique(shp$BINOMIAL)),                   alpha = 0.5) position <- match(shp$BINOMIAL,                   unique(shp$BINOMIAL)) colors <- colors[position] plot(shp, col = colors, lty = 0,      main = \"Spatial polygons\") library(maps) maps::map(add = TRUE) r2 <- shp2rast(shp, sps.col = \"BINOMIAL\", ymask = FALSE, background = 0, resolution = 0.5) r2 #> class       : SpatRaster  #> dimensions  : 77, 126, 9  (nrow, ncol, nlyr) #> resolution  : 0.5, 0.5  (x, y) #> extent      : 114.099, 177.099, -39.17965, -0.6796477  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84  #> source(s)   : memory #> names       : Litor~ensis, Litor~ttata, Litor~ensis, Litor~malin, Litor~giana, Litor~kiana, ...  #> min values  :           0,           0,           0,           0,           0,           0, ...  #> max values  :           1,           1,           1,           1,           1,           1, ... data <- load.data.rosauer() names(data$raster) == data$tree$tip.label #>  [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE #> [13]  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE #> [25] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE ras <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package = \"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package = \"phyloraster\")) dataprep <- phylo.pres(x = ras, tree = tree) names(dataprep$x) == tree$tip.label #>  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #> [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #> [31] TRUE TRUE TRUE"},{"path":"https://gabferreira.github.io/phyloraster/articles/phyloraster-vignette.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"Introduction to the phyloraster package and its functionalities","text":"Great!! Now, already able calculate measures endemism evolutionary diversity. Endemism measurements phyloraster package implements functions calculating spatial patterns endemism based weighted endemism method (; Williams et al. 1994, Crisp et al. 2001) function rast.. function returns raster values weighted endemism pixel. Endemism values range 0 1. using R plot function terra package possible visualize regions species restricted range distributed.  Evolutionary measurements first evolutionary measure Faith’s phylogenetic diversity (PD, Faith 1994), calculated sum branch length species occurring given region (Faith 1994).  second measure phylogenetic endemism (PE, Rosauer et al. 2009), calculates degree PD restricted specific region (Rosauer et al. 2009). function rast.pe returns raster layer containing PE region interest. result can visualized using R plot function terra package.","code":"ras <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package = \"phyloraster\")) wer <- rast.we(x = ras) wer #> class       : SpatRaster  #> dimensions  : 90, 68, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 144.0157, 150.8157, -23.044, -14.044  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> name        :           WE  #> min value   : 0.0007231441  #> max value   : 0.2989257007 wer$WE #> class       : SpatRaster  #> dimensions  : 90, 68, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 144.0157, 150.8157, -23.044, -14.044  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> name        :           WE  #> min value   : 0.0007231441  #> max value   : 0.2989257007 plot(wer$WE, main =\"Weigthed Endemism\") ras <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package = \"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package = \"phyloraster\")) dataprep <- phylo.pres(x = ras, tree = tree, pruning = \"tree\")  pdr <- rast.pd(x = dataprep$x, edge.path = dataprep$edge.path, branch.length = dataprep$branch.length) plot(pdr$PD, main = \"Phylogenetic diversity\") ras <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package = \"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package = \"phyloraster\")) per <- rast.pe(x = dataprep$x, tree) per #> class       : SpatRaster  #> dimensions  : 90, 68, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 144.0157, 150.8157, -23.044, -14.044  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> name        :           PE  #> min value   : 0.0002224064  #> max value   : 0.1756404428 plot(per$PE, main = \"Phylogenetic Endemism\")"},{"path":"https://gabferreira.github.io/phyloraster/articles/phyloraster-vignette.html","id":"null","dir":"Articles","previous_headings":"","what":"Null models","title":"Introduction to the phyloraster package and its functionalities","text":"Null models widely used method control richness effects diversity measures (Gotelli Ulrich, 2012). standardized effect size (SES) measure, also known z-score z-value, used calculate null models randomization tests (Gotelli McCabe 2002). phyloraster implements three methods calculate SES using spatial phylogenetic randomization: rast.pe.ses, rast.pd.ses, rast..ses. Spatial phylogenetic randomization randomization procedure calculation SES done internally functions rast..ses(), rast.pd.ses(), rast.ed.ses(), rast.pe.ses(), geo.phylo.ses() package SESraster (Heming et al., 2023). SESraster currently implements six algorithms randomize binary species distribution several levels constraints: SIM1, SIM2, SIM3, SIM5, SIM6, SIM9 (sensu Gotelli, 2000). methods implemented SESraster based species (originally rows) sites (originally columns) treated (.e. fixed, equiprobable, proportional sums) (Gotelli, 2000). randomization algorithms currently available SESraster : SIM1 (species occurrence equiprobable site richness equiprobable), SIM2 (species occurrence fixed site richness equiprobable), SIM3 (species occurrence equiprobable site richness fixed), SIM5 (species occurrence proportional site richness fixed), SIM6 (species occurrence proportional site richness fixed) SIM9 (species occurrence fixed site richness fixed, similar preserved model Laffan & Crisp, 2003). addition, SESraster (consequently phyloraster) supports user’s custom randomization algorithms SES calculation, long function returns objects class SpatRaster. allows complete flexibility using algorithm yet implemented package. default, phyloraster uses function bootspat_str() SESraster package conduct randomizations, user free choose methods mentioned spat_alg argument *.ses() functions phyloraster package. function bootspat_str() equivalent SIM5 (proportional-fixed) method Gotelli (2000), partially relaxes spatial structure species distributions keeps spatial structure observed richness pattern across cells. Now presented randomization methods, can start build null models. Plotting results","code":"library(SESraster) ras <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package = \"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package = \"phyloraster\")) data <- phylo.pres(ras, tree, pruning = \"tree\")  t <- rast.pd.ses(data$x, edge.path = data$edge.path, branch.length = data$branch.length, aleats = 10, random = \"spat\") plot(t)"},{"path":"https://gabferreira.github.io/phyloraster/articles/phyloraster-vignette.html","id":"processing","dir":"Articles","previous_headings":"","what":"Post processing","title":"Introduction to the phyloraster package and its functionalities","text":"Function delta.grid package also brings function delta.grid allows calculate difference spatialized diversity metrics two different times. function allow assessing species richness varies different times, useful climate change scenario. example, imagine currently 33 tree frog species subfamily Pelodryadinae occurring Australia. map can visualize spatial pattern species richness.  Now imagine climate change progresses, 16 relatively vulnerable species heavily affected become locally extinct.  delta.grid function allows visualize variation richness patterns spatially. See example .  map can see greatest loss occurs eastern region map, losing 16 species. delta.grid function can used metrics available phyloraster package.","code":"# load the data x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) # richness riq.pres <- rast.sr(x) plot(riq.pres) # load the data x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) # richness future riq.fut <- rast.sr(x[[c(1:15)]]) # imagine we lost some species in the future terra::plot(riq.fut) dg <- delta.grid(riq.pres, riq.fut) plot(dg)"},{"path":"https://gabferreira.github.io/phyloraster/articles/phyloraster-vignette.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to the phyloraster package and its functionalities","text":"Crisp, M., Laffan, S., Linder, H. Monro, . (2001). Endemism Australian flora. Journal Biogeography, 28, 183–198. Daru, B. H., Karunarathne, P., Schliep, K. (2020). phyloregion: R package biogeographical regionalization macroecology. Methods Ecology Evolution, 11(11), 1483–1491. https://doi.org/10.1111/2041-210X.13478 Faith, D. P. (1992). Conservation evaluation phylogenetic diversity. Biological conservation, 61(1), 1-10. Gotelli, N. J., McCabe, D. J. (2002). Species co-occurrence: meta-analysis J. M. Diamond’s assembly rules model. Ecology, 83(8), 2091–2096. https://doi.org/10.1890/0012-9658(2002)083[2091:SCOAMA]2.0.CO;2 Gotelli, N. J., Ulrich, W. (2012). Statistical challenges null model analysis. Oikos, 121(2), 171–180. https://doi.org/10.1111/j.1600-0706.2011.20301.x Hackathon, R. (2020). phylobase: Base Package Phylogenetic Structures Comparative Data (0.8. 10). https://CRAN.R-project.org/package=phylobase Hjimans, R. J. (2022). Terra, Spatial Data Analysis (1.6.7). https://CRAN.R-project.org/package=terra Isaac, N. J., Turvey, S. T., Collen, B., Waterman, C. Baillie, J. E. (2007). Mammals EDGE: conservation priorities based threat phylogeny. PLoS ONE 2, e296. Kembel, S. W., Cowan, P. D., Helmus, M. R., Cornwell, W. K., Morlon, H., Ackerly, D. D., Blomberg, S. P., Webb, C. O. (2010). Picante: R tools integrating phylogenies ecology. Bioinformatics, 26(11), 1463–1464. https://doi.org/10.1093/bioinformatics/btq166 Paradis, E., Schliep, K. (2019). ape 5.0: environment modern phylogenetics evolutionary analyses R. Bioinformatics, 35, 526–528. Pearse, W. D., Cadotte, M. W., Cavender-Bares, J., Ives, . R., Tucker, C. M., Walker, S. C., & Helmus, M. R. (2015). pez: Phylogenetics environmental sciences. Bioinformatics, 31(17), 2888–2890. https://doi.org/10.1093/bioinformatics/btv277 Rosauer, D. . N., Laffan, S. W., Crisp, M. D., Donnellan, S. C. Cook, L. G. (2009). Phylogenetic endemism: new approach identifying geographical concentrations evolutionary history. Molecular ecology, 18(19), 4061-4072. Williams, P.H., Humphries, C.J., Forey, P.L., Humphries, C.J. VaneWright, R.. (1994). Biodiversity, taxonomic relatedness, endemism conservation. : Systematics Conservation Evaluation (eds Forey PL, Humphries CJ, Vane-Wright RI), p. 438. Oxford University Press, Oxford.","code":""},{"path":"https://gabferreira.github.io/phyloraster/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriela Alves-Ferreira. Author, maintainer, copyright holder. Flávio M. M. Mota. Author. Neander Marcel Heming. Author.","code":""},{"path":"https://gabferreira.github.io/phyloraster/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alves-Ferreira G, Mota FMM, Heming NM (2023). “phyloraster: Evolutionary Diversity Metrics Raster Data.” R package version 2.0, https://CRAN.R-project.org/package=phyloraster.","code":"@Misc{,   title = {phyloraster: Evolutionary Diversity Metrics for Raster Data},   author = {Gabriela Alves-Ferreira and Flávio M. M. Mota and Neander Marcel Heming},   year = {2023},   note = {R package version 2.0},   url = {https://CRAN.R-project.org/package=phyloraster}, }"},{"path":"https://gabferreira.github.io/phyloraster/index.html","id":"phyloraster-","dir":"","previous_headings":"","what":"Evolutionary Diversity Metrics for Raster Data","title":"Evolutionary Diversity Metrics for Raster Data","text":"phyloraster R package calculate measures endemism evolutionary diversity using rasters presence-absence input, allowing join results derived species distribution models (SDMs) phylogenetic information.","code":""},{"path":"https://gabferreira.github.io/phyloraster/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Evolutionary Diversity Metrics for Raster Data","text":"can install development version phyloraster package GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"gabferreira/phyloraster\")"},{"path":"https://gabferreira.github.io/phyloraster/index.html","id":"phyloraster-basics","dir":"","previous_headings":"","what":"phyloraster basics","title":"Evolutionary Diversity Metrics for Raster Data","text":"Basic information package can found vignette browseVignettes(\"phyloraster\")","code":""},{"path":"https://gabferreira.github.io/phyloraster/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Evolutionary Diversity Metrics for Raster Data","text":"use R package, please cite publications: Alves-Ferreira G., Heming N. M., Mota F. M. M. (2023). phyloraster: Evolutionary Diversity Metrics Raster Data. R package version 2.0. information:","code":"citation(\"phyloraster\")"},{"path":"https://gabferreira.github.io/phyloraster/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Evolutionary Diversity Metrics for Raster Data","text":"question find bug, let us know topic “Issues”.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/arg.check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for missing arguments in function call — arg.check","title":"Check for missing arguments in function call — arg.check","text":"Check missing arguments using function call provided vector argument names check","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/arg.check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for missing arguments in function call — arg.check","text":"","code":"arg.check(   call,   arguments = c(\"LR\", \"inv.R\", \"branch.length\", \"n.descen\", \"tree\") )"},{"path":"https://gabferreira.github.io/phyloraster/reference/arg.check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for missing arguments in function call — arg.check","text":"call match.call(). get function call specified arguments full names. arguments character. Arguments checked","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/arg.check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for missing arguments in function call — arg.check","text":"logical","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/arg.check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check for missing arguments in function call — arg.check","text":"Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/arg.check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for missing arguments in function call — arg.check","text":"","code":"geop <- function(x, tree, ...){                 f4 <- arg.check(match.call(),                                 c(\"LR\", \"inv.R\", \"branch.length\", \"n.descen\"))                 f1 <- arg.check(match.call(),                                 c(\"tree\"))                 c(f1, f4)                 } geop(1, 1) #>          tree            LR         inv.R branch.length      n.descen  #>         FALSE         FALSE         FALSE         FALSE         FALSE  geop(1) #>          tree            LR         inv.R branch.length      n.descen  #>          TRUE         FALSE         FALSE         FALSE         FALSE  geop(1, LR=1) #>          tree            LR         inv.R branch.length      n.descen  #>          TRUE         FALSE         FALSE         FALSE         FALSE"},{"path":"https://gabferreira.github.io/phyloraster/reference/dataR.html","id":null,"dir":"Reference","previous_headings":"","what":"Presence-absence of 33 Australian tree frogs (Rosauer 2017) — dataR","title":"Presence-absence of 33 Australian tree frogs (Rosauer 2017) — dataR","text":"dataset containing presence-absence 33 Australian tree frogs. dataset also provide coordinates x y site.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dataR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presence-absence of 33 Australian tree frogs (Rosauer 2017) — dataR","text":"","code":"dataR"},{"path":"https://gabferreira.github.io/phyloraster/reference/dataR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Presence-absence of 33 Australian tree frogs (Rosauer 2017) — dataR","text":"matrix 2891 rows 33 columns.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dataR.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Presence-absence of 33 Australian tree frogs (Rosauer 2017) — dataR","text":"Rosauer, 2017. Available : https://github.com/DanRosauer/phylospatial/tree/master/PhyloEndemism_in_R/Tree%20Frog%20Data","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/delta.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the delta of spatialized diversity metrics (richness, phylogenetic endemism, phylogenetic diversity, weighted endemism, evolutionary distinctiveness) between different time periods — delta.grid","title":"Calculates the delta of spatialized diversity metrics (richness, phylogenetic endemism, phylogenetic diversity, weighted endemism, evolutionary distinctiveness) between different time periods — delta.grid","text":"Calculates delta spatialized diversity metrics (richness, phylogenetic endemism, phylogenetic diversity, weighted endemism, evolutionary distinctiveness) different time periods.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/delta.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the delta of spatialized diversity metrics (richness, phylogenetic endemism, phylogenetic diversity, weighted endemism, evolutionary distinctiveness) between different time periods — delta.grid","text":"","code":"delta.grid(r1, r2, filename = NULL, cores = 1, ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/delta.grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the delta of spatialized diversity metrics (richness, phylogenetic endemism, phylogenetic diversity, weighted endemism, evolutionary distinctiveness) between different time periods — delta.grid","text":"r1 SpatRaster Spatialized diversity metrics time 1 (e.g phylogenetic diversity present). calculate diversity metrics rasters see phyloraster::geo.phylo function. r2 SpatRaster Spatialized diversity metrics time 2 (e.g phylogenetic diversity future). filename character. Output filename. cores positive integer. cores > 1, 'parallel' package cluster many cores created used. ... additional arguments passed passed calling function.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/delta.grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the delta of spatialized diversity metrics (richness, phylogenetic endemism, phylogenetic diversity, weighted endemism, evolutionary distinctiveness) between different time periods — delta.grid","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/delta.grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the delta of spatialized diversity metrics (richness, phylogenetic endemism, phylogenetic diversity, weighted endemism, evolutionary distinctiveness) between different time periods — delta.grid","text":"two input rasters (r1 r2) must extent.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/delta.grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the delta of spatialized diversity metrics (richness, phylogenetic endemism, phylogenetic diversity, weighted endemism, evolutionary distinctiveness) between different time periods — delta.grid","text":"","code":"if (FALSE) { # data x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\"))  # metric SE richness riq.pres <- rast.se(x) riq.fut <- rast.se(x[[c(1:15)]]) # imagine we lost some species in the future dg <- delta.grid(riq.pres, riq.fut) plot(dg) }"},{"path":"https://gabferreira.github.io/phyloraster/reference/df2rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a data.frame to raster — df2rast","title":"Transform a data.frame to raster — df2rast","text":"function transforms data.frame matrix presence-absence raster distribution.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/df2rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a data.frame to raster — df2rast","text":"","code":"df2rast(x, CRS = \"+proj=longlat +datum=WGS84\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/df2rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a data.frame to raster — df2rast","text":"x data.frame. data.frame matrix species names columns sites rows. first two columns must provide longitude latitude, respectively. CRS character. Description Coordinate Reference System (map projection) PROJ.4, WKT authority:code notation. See crs. argument missing, x coordinates within -360 .. 360 y coordinates within -90 .. 90, longitude/latitude assigned ... additional arguments passed passed calling function.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/df2rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a data.frame to raster — df2rast","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/df2rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a data.frame to raster — df2rast","text":"","code":"if (FALSE) { dat <- phyloraster::load.data.rosauer() df2rast(dat$presab, crs = \"+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0\") }"},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-fit.memory.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate if the rasters generated in the function fits on available memory — .fit.memory","title":"Evaluate if the rasters generated in the function fits on available memory — .fit.memory","text":"Tests amount RAM required available process SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-fit.memory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate if the rasters generated in the function fits on available memory — .fit.memory","text":"","code":".fit.memory(x, n = 1)"},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-fit.memory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate if the rasters generated in the function fits on available memory — .fit.memory","text":"x SpatRaster n positive integer. number copies x needed","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-fit.memory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate if the rasters generated in the function fits on available memory — .fit.memory","text":"logical","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.ed.B.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Evolutionary distinctiveness for each raster cell — .rast.ed.B","title":"Calculate Evolutionary distinctiveness for each raster cell — .rast.ed.B","text":"function calculates evolutionary distinctiveness according fair-proportion index.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.ed.B.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Evolutionary distinctiveness for each raster cell — .rast.ed.B","text":"","code":".rast.ed.B(x, edge.path, branch.length, n.descen, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.ed.B.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Evolutionary distinctiveness for each raster cell — .rast.ed.B","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) must sorted according tree order. See phylo.pres function. edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. Named numeric vector branch length species. See phylo.pres n.descen numeric. Named numeric vector number descendants branch. See phylo.pres filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.ed.B.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Evolutionary distinctiveness for each raster cell — .rast.ed.B","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.ed.B.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Evolutionary distinctiveness for each raster cell — .rast.ed.B","text":"Isaac, N. J., Turvey, S. T., Collen, B., Waterman, C. Baillie, J. E. (2007). Mammals EDGE: conservation priorities based threat phylogeny. PLoS ONE 2, e296.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.ed.B.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Evolutionary distinctiveness for each raster cell — .rast.ed.B","text":"Gabriela Alves-Ferreira Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.geo.phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic community metrics for raster data — .rast.geo.phylo","title":"Calculate phylogenetic community metrics for raster data — .rast.geo.phylo","text":"Calculate species richness, phylogenetic diversity, evolutionary distinctiveness, phylogenetic endemism weighted endemism using rasters input","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.geo.phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic community metrics for raster data — .rast.geo.phylo","text":"","code":".rast.geo.phylo(   x,   inv.R,   edge.path,   branch.length,   n.descen,   filename = \"\",   ... )"},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.geo.phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic community metrics for raster data — .rast.geo.phylo","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) must sorted according tree order. See phylo.pres function. inv.R SpatRaster. inverse range size calculated inv.range edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. named numerical vector containing branch length species. n.descen numeric. Named numeric vector number descendants branch filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.geo.phylo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate phylogenetic community metrics for raster data — .rast.geo.phylo","text":"SpatRaster one layer metric","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.geo.phylo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate phylogenetic community metrics for raster data — .rast.geo.phylo","text":"Community metrics calculated: Phylogenetic diversity (Faith 1992) Richness Evolutionary distinctiveness fair-proportion (Isaac et al. 2007) Phylogenetic endemism (Rosauer et al. 2009) Weighted endemism (Crisp et al. 2001, Williams et al. 1994)","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.geo.phylo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic community metrics for raster data — .rast.geo.phylo","text":"Rosauer, D. . N., Laffan, S. W., Crisp, M. D., Donnellan, S. C. Cook, L. G. (2009). Phylogenetic endemism: new approach identifying geographical concentrations evolutionary history. Molecular ecology, 18(19), 4061-4072. Faith, D. P. (1992). Conservation evaluation phylogenetic diversity. Biological conservation, 61(1), 1-10. Williams, P.H., Humphries, C.J., Forey, P.L., Humphries, C.J. VaneWright, R.. (1994). Biodiversity, taxonomic relatedness, endemism conservation. : Systematics Conservation Evaluation (eds Forey PL, Humphries CJ, Vane-Wright RI), p. 438. Oxford University Press, Oxford. Crisp, M., Laffan, S., Linder, H. Monro, . (2001). Endemism theAustralian flora. Journal Biogeography, 28, 183–198. Isaac, N. J., Turvey, S. T., Collen, B., Waterman, C. Baillie, J. E. (2007). Mammals EDGE: conservation priorities based threat phylogeny. PLoS ONE 2, e296. Laffan, S. W., Rosauer, D. F., Di Virgilio, G., Miller, J. T., González‐Orozco, C. E., Knerr, N., ... & Mishler, B. D. (2016). Range‐weighted metrics species phylogenetic turnover can better resolve biogeographic transition zones. Methods Ecology Evolution, 7(5), 580-588.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.geo.phylo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate phylogenetic community metrics for raster data — .rast.geo.phylo","text":"Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pd.B.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic diversity for each raster cell — .rast.pd.B","title":"Calculate phylogenetic diversity for each raster cell — .rast.pd.B","text":"Calculate sum branch length species present raster data.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pd.B.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic diversity for each raster cell — .rast.pd.B","text":"","code":".rast.pd.B(x, edge.path, branch.length, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pd.B.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic diversity for each raster cell — .rast.pd.B","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. Named numeric vector branch length species. See phylo.pres filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pd.B.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate phylogenetic diversity for each raster cell — .rast.pd.B","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pd.B.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic diversity for each raster cell — .rast.pd.B","text":"Faith, D. P. (1992). Conservation evaluation phylogenetic diversity. Biological conservation, 61(1), 1-10.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pd.B.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate phylogenetic diversity for each raster cell — .rast.pd.B","text":"Neander Marcel Heming Gabriela Alves-Ferreira","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pe.B.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic endemism for a raster — .rast.pe.B","title":"Calculate phylogenetic endemism for a raster — .rast.pe.B","text":"Calculate phylogenetic endemism using rasters input output.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pe.B.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic endemism for a raster — .rast.pe.B","text":"","code":".rast.pe.B(x, inv.R, branch.length, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pe.B.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic endemism for a raster — .rast.pe.B","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. inv.R SpatRaster. Inverse range size. See inv.range branch.length numeric. Named numeric vector branch length species. See phylo.pres filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pe.B.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate phylogenetic endemism for a raster — .rast.pe.B","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.pe.B.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic endemism for a raster — .rast.pe.B","text":"Rosauer, D. . N., Laffan, S. W., Crisp, M. D., Donnellan, S. C., & Cook, L. G. (2009). Phylogenetic endemism: new approach identifying geographical concentrations evolutionary history. Molecular ecology, 18(19), 4061-4072.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.we.B.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted endemism for each raster cell — .rast.we.B","title":"Calculate weighted endemism for each raster cell — .rast.we.B","text":"Calculate sum inverse range size species present raster cell.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.we.B.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted endemism for each raster cell — .rast.we.B","text":"","code":".rast.we.B(x, inv.R, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.we.B.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted endemism for each raster cell — .rast.we.B","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. inv.R SpatRaster. Inverse range size. See inv.range filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.we.B.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted endemism for each raster cell — .rast.we.B","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.we.B.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate weighted endemism for each raster cell — .rast.we.B","text":"Williams, P.H., Humphries, C.J., Forey, P.L., Humphries, C.J., VaneWright, R.. (1994). Biodiversity, taxonomic relatedness, endemism conservation. : Systematics Conservation Evaluation (eds Forey PL, Humphries CJ, Vane-Wright RI), p. 438. Oxford University Press, Oxford. Crisp, M., Laffan, S., Linder, H., Monro, . (2001). Endemism Australian flora. Journal Biogeography, 28, 183–198.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/dot-rast.we.B.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate weighted endemism for each raster cell — .rast.we.B","text":"Neander Marcel Heming Gabriela Alves-Ferreira","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic community metrics for raster data — geo.phylo","title":"Calculate phylogenetic community metrics for raster data — geo.phylo","text":"Calculate species richness, phylogenetic diversity, evolutionary distinctiveness, phylogenetic endemism weighted endemism using rasters input.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic community metrics for raster data — geo.phylo","text":"","code":"geo.phylo(   x,   tree,   inv.R,   edge.path,   branch.length,   n.descen,   filename = \"\",   ... )"},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic community metrics for raster data — geo.phylo","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. tree phylo. dated tree. inv.R SpatRaster. Inverse range size. See inv.range edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. Named numeric vector branch length species. See phylo.pres n.descen numeric. Named numeric vector number descendants branch. See phylo.pres filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate phylogenetic community metrics for raster data — geo.phylo","text":"SpatRaster one layer metric","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate phylogenetic community metrics for raster data — geo.phylo","text":"Community metrics calculated: Phylogenetic diversity (Faith 1992) Richness Evolutionary distinctiveness fair-proportion (Isaac et al. 2007) Phylogenetic endemism (Rosauer et al. 2009) Weighted endemism (Crisp et al. 2001, Williams et al. 1994)","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic community metrics for raster data — geo.phylo","text":"Rosauer, D. . N., Laffan, S. W., Crisp, M. D., Donnellan, S. C. Cook, L. G. (2009). Phylogenetic endemism: new approach identifying geographical concentrations evolutionary history. Molecular ecology, 18(19), 4061-4072. Faith, D. P. (1992). Conservation evaluation phylogenetic diversity. Biological conservation, 61(1), 1-10. Williams, P.H., Humphries, C.J., Forey, P.L., Humphries, C.J. VaneWright, R.. (1994). Biodiversity, taxonomic relatedness, endemism conservation. : Systematics Conservation Evaluation (eds Forey PL, Humphries CJ, Vane-Wright RI), p. 438. Oxford University Press, Oxford. Crisp, M., Laffan, S., Linder, H. Monro, . (2001). Endemism theAustralian flora. Journal Biogeography, 28, 183–198. Isaac, N. J., Turvey, S. T., Collen, B., Waterman, C. Baillie, J. E. (2007). Mammals EDGE: conservation priorities based threat phylogeny. PLoS ONE 2, e296. Laffan, S. W., Rosauer, D. F., Di Virgilio, G., Miller, J. T., González‐Orozco, C. E., Knerr, N., ... & Mishler, B. D. (2016). Range‐weighted metrics species phylogenetic turnover can better resolve biogeographic transition zones. Methods Ecology Evolution, 7(5), 580-588.","code":""},{"path":[]},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate phylogenetic community metrics for raster data — geo.phylo","text":"Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate phylogenetic community metrics for raster data — geo.phylo","text":"","code":"library(terra) #> terra 1.7.39 library(phyloraster) x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\"))[[1:10]] tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\")) data <- phylo.pres(x, tree) #> Warning: Some species in the phylogeny 'tree' are missing from the SpatRaster 'x' and were dropped: Litoria_nigrofrenata, Litoria_bicolor, Litoria_fallax, Litoria_genimaculata, Litoria_andiirrmalin, Litoria_wilcoxii, Litoria_jungguy, Litoria_caerulea, Litoria_gracilenta, Litoria_chloris, Litoria_xanthomera, Cyclorana_brevipes, Cyclorana_novaehollandiae, Cyclorana_manya, Cyclorana_cultripes, Litoria_alboguttata, Cyclorana_longipes, Nyctimystes_dayi, Litoria_nannotis, Litoria_lorica, Litoria_rheocola, Litoria_nyakalensis, Litoria_infrafrenata inv.R <- inv.range(data$x) #t <- geo.phylo(x, tree) t <- geo.phylo(data$x, inv.R = inv.R, edge.path = data$edge.path, branch.length = data$branch.length, n.descen = data$n.descendants) terra::plot(t)"},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.ses.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","title":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","text":"Calculates standardized effect size phylogenetic community metrics. See Details information.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.ses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","text":"","code":"geo.phylo.ses(   x,   tree,   inv.R,   edge.path,   branch.length,   n.descen,   spat_alg = \"bootspat_str\",   spat_alg_args = list(rprob = NULL, rich = NULL, fr_prob = NULL),   random = c(\"tip\", \"spat\")[2],   aleats = 10,   cores = 1,   filename = \"\",   ... )"},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.ses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. tree phylo. dated tree. inv.R SpatRaster. Inverse range size. See inv.range edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. Named numeric vector branch length species. See phylo.pres n.descen numeric. Named numeric vector number descendants branch. See phylo.pres spat_alg function algorithm implementing desired randomization method. must work SpatRaster objects. See examples. Example functions work : bootspat_naive, bootspat_str, bootspat_ff. spat_alg_args List arguments passed randomization method chosen 'spat_alg'. See bootspat_naive, bootspat_str, bootspat_ff random character. character indicating type randomization. currently available randomization methods \"tip\", \"site\", \"species\" \"\" (site species). aleats positive integer. positive integer indicating many times calculation repeated. cores positive integer. cores > 1, 'parallel' package cluster many cores created used. can also supply cluster object. Ignored functions implemented terra C++ (see fun) filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.ses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.ses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","text":"spatial randomization (spat) keeps richness exact samples species presences proportionally observed frequency (.e. number occupied pixels). randomization assign values cells nodata.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.ses.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","text":"Williams, P.H., Humphries, C.J., Forey, P.L., Humphries, C.J., VaneWright, R.. (1994). Biodiversity, taxonomic relatedness, endemism conservation. : Systematics Conservation Evaluation (eds Forey PL, Humphries CJ, Vane-Wright RI), p. 438. Oxford University Press, Oxford. Crisp, M., Laffan, S., Linder, H., Monro, . (2001). Endemism Australian flora. Journal Biogeography, 28, 183–198.","code":""},{"path":[]},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.ses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","text":"Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/geo.phylo.ses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate phylogenetic community metrics and their standardized effect sizes for raster data — geo.phylo.ses","text":"","code":"library(terra) library(phyloraster) require(\"SESraster\") #> Loading required package: SESraster #> This is SESraster 0.7.0 #> If you use SESraster, please cite in your publications. See: #>   citation(\"SESraster\") x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\")) # data <- phylo.pres(x, tree) # area.branch <- inv.range(data$x, data$branch.length) tses <- geo.phylo.ses(x = x,                      tree = tree,                       # FUN_args = list(range.BL=area.branch$range.BL,                       # inv.R=area.branch$inv.R,                       # branch.length=data$branch.length,                       # n.descen = data$n.descendants),                       spat_alg = \"bootspat_str\",                       spat_alg_args = list(rprob = NULL,                                            rich = NULL,                                            fr_prob = NULL),                       aleats = 2) terra::plot(tses)"},{"path":"https://gabferreira.github.io/phyloraster/reference/inv.range.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the inverse of range size — inv.range","title":"Calculate the inverse of range size — inv.range","text":"Get range size square kilometers cells NA, inverse range size inverse range size multiplied branch length multiple species using raster presence-absence.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/inv.range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the inverse of range size — inv.range","text":"","code":"inv.range(x, filename = \"\", overwrite = FALSE, ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/inv.range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the inverse of range size — inv.range","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. filename character. Output filename overwrite logical. TRUE, filename overwritten ... additional arguments passed passed calling function.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/inv.range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the inverse of range size — inv.range","text":"SpatRaster numeric","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/inv.range.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the inverse of range size — inv.range","text":"Neander Marcel Heming Gabriela Alves-Ferreira","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/inv.range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the inverse of range size — inv.range","text":"","code":"# calculating the inverse of range size x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) inv.range(x) #> class       : SpatRaster  #> dimensions  : 90, 68, 33  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 144.0157, 150.8157, -23.044, -14.044  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> names       : Litor~elata,  Litor~othii, Litor~stris, Litor~salis,  Litor~bella,  Litor~ermis, ...  #> min values  :  0.02261345, 0.0005772242,  0.02510280, 0.004218657, 0.0005237743, 0.0003597672, ...  #> max values  :  0.02379603, 0.0006074103,  0.02641556, 0.004439273, 0.0005511653, 0.0003785813, ..."},{"path":"https://gabferreira.github.io/phyloraster/reference/load.data.rosauer.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an example dataset with presence-absence data of 33 tree frogs and a phylogenetic tree for this species — load.data.rosauer","title":"Load an example dataset with presence-absence data of 33 tree frogs and a phylogenetic tree for this species — load.data.rosauer","text":"function load phylogenetic tree, raster data.frame presence-absence 33 Australian tree frogs Rosauer (2017). also provide distribution shapefiles species according IUCN.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/load.data.rosauer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an example dataset with presence-absence data of 33 tree frogs and a phylogenetic tree for this species — load.data.rosauer","text":"","code":"load.data.rosauer()"},{"path":"https://gabferreira.github.io/phyloraster/reference/load.data.rosauer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Load an example dataset with presence-absence data of 33 tree frogs and a phylogenetic tree for this species — load.data.rosauer","text":"Rosauer, 2017. Available : Github IUCN. 2022. IUCN Red List Threatened Species (spatial data). Version 2022-1. IUCN","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/load.data.rosauer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an example dataset with presence-absence data of 33 tree frogs and a phylogenetic tree for this species — load.data.rosauer","text":"data.frame, SpatRaster, SpatVector phylo","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/phylo.pres.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare rasters and phylogenetic tree to run community metrics — phylo.pres","title":"Prepare rasters and phylogenetic tree to run community metrics — phylo.pres","text":"Reorder stack rasters species distribution according tree order get branch length species calculate diversity metrics using phyloraster::geo.phylo(). names must phylogenetic tree raster species. example, name \"Leptodactylus_latrans\" raster \"Leptodactylus latrans\" tree, function work. goes uppercase lowercase letters.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/phylo.pres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare rasters and phylogenetic tree to run community metrics — phylo.pres","text":"","code":"phylo.pres(x, tree, full_tree_metr = FALSE, ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/phylo.pres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare rasters and phylogenetic tree to run community metrics — phylo.pres","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. tree phylo. dated tree. full_tree_metr logical. Whether edge.path, branch length number descendants calculated full prunned tree. ... additional arguments passed passed calling function.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/phylo.pres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare rasters and phylogenetic tree to run community metrics — phylo.pres","text":"Returns list containing SpatRaster reordered according order species appear phylogenetic tree, subtree containing species stack rasters finally two named numerical vectors containing branch length number descendants species.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/phylo.pres.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare rasters and phylogenetic tree to run community metrics — phylo.pres","text":"Neander Marcel Heming Gabriela Alves Ferreira","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/phylo.pres.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare rasters and phylogenetic tree to run community metrics — phylo.pres","text":"","code":"library(phyloraster) x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\")) phylo.pres(x[[1:3]], tree, full_tree_metr = TRUE) #> Warning: Some species in the phylogeny 'tree' are missing from the SpatRaster 'x' and were dropped: Litoria_dorsalis, Litoria_rubella, Litoria_nigrofrenata, Litoria_nasuta, Litoria_tornieri, Litoria_inermis, Litoria_pallida, Litoria_latopalmata, Litoria_bicolor, Litoria_fallax, Litoria_genimaculata, Litoria_andiirrmalin, Litoria_wilcoxii, Litoria_jungguy, Litoria_caerulea, Litoria_gracilenta, Litoria_chloris, Litoria_xanthomera, Cyclorana_brevipes, Cyclorana_novaehollandiae, Cyclorana_manya, Cyclorana_cultripes, Litoria_alboguttata, Cyclorana_longipes, Nyctimystes_dayi, Litoria_nannotis, Litoria_lorica, Litoria_rheocola, Litoria_nyakalensis, Litoria_infrafrenata #> $x #> class       : SpatRaster  #> dimensions  : 90, 68, 3  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 144.0157, 150.8157, -23.044, -14.044  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : rast.presab.tif  #> names       : Litoria_revelata, Litoria_rothii, Litoria_longirostris  #> min values  :                0,              0,                    0  #> max values  :                1,              1,                    1  #>  #> $tree #>  #> Phylogenetic tree with 3 tips and 1 internal nodes. #>  #> Tip labels: #>   Litoria_revelata, Litoria_rothii, Litoria_longirostris #>  #> Unrooted; includes branch lengths. #>  #> $edge.path #>                      [,1] [,2] [,3] [,4] [,5] #> Litoria_revelata        0    1    0    0    1 #> Litoria_rothii          0    0    1    0    1 #> Litoria_longirostris    0    0    0    1    1 #>  #> $branch.length #> [1] 12.680290  0.589016  0.589015  0.589015  0.420985 #>  #> $n.descendants #>  [1] 37 37 38 38 37 39 40 41 42 42 41 43 43 48 49 50 50 51 52 53 53 54 54 55 55 #> [26] 56 56 57 58 58 59 59 44 34 35 36 37 36 39 40 41 35 34 44 45 46 47 48 49 47 #> [51] 51 52 46 54 55 45 57 58 #> attr(,\"na.action\") #> [1] 34 #> attr(,\"class\") #> [1] \"exclude\" #>"},{"path":"https://gabferreira.github.io/phyloraster/reference/range_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate range size for a set of species using a raster as input — range_size","title":"Calculate range size for a set of species using a raster as input — range_size","text":"function calculate range size square meters (default) cells NA. size cells constant degrees square meters, considered method applied calculate area.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/range_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate range size for a set of species using a raster as input — range_size","text":"","code":"range_size(x, cellSz, unit = \"m\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/range_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate range size for a set of species using a raster as input — range_size","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. cellSz SpatRaster. SpatRaster containing cellSize values. See cellSize unit character. One \"m\", \"km\", \"ha\" ... additional arguments passed passed calling function.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/range_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate range size for a set of species using a raster as input — range_size","text":"vector","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/range_size.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate range size for a set of species using a raster as input — range_size","text":"Gabriela Alves Ferreira Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/range_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate range size for a set of species using a raster as input — range_size","text":"","code":"x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) range_size(x, cellSz <- terra::cellSize(x)) #>          Litoria_revelata            Litoria_rothii      Litoria_longirostris  #>                5021016045              196704341029                4523101306  #>          Litoria_dorsalis           Litoria_rubella           Litoria_inermis  #>               26914371162              216777517522              315599945794  #>           Litoria_pallida       Litoria_latopalmata          Litoria_tornieri  #>               46641760386              283024695689                2357368186  #>            Litoria_nasuta      Litoria_nigrofrenata           Litoria_bicolor  #>              128975306997               27880171167               64016561339  #>            Litoria_fallax      Litoria_genimaculata          Litoria_wilcoxii  #>              105407823256               46631895568               98735291950  #>           Litoria_jungguy      Litoria_andiirrmalin          Litoria_caerulea  #>               27268098100                 477612940              274967475725  #>           Litoria_chloris        Litoria_xanthomera        Litoria_gracilenta  #>               16970408732               14130600645              124447061138  #>        Cyclorana_brevipes Cyclorana_novaehollandiae       Cyclorana_cultripes  #>              247438116703              328609847581                 909156692  #>           Cyclorana_manya       Litoria_alboguttata        Cyclorana_longipes  #>               47698700335              288806915892               10082989729  #>          Nyctimystes_dayi          Litoria_nannotis            Litoria_lorica  #>               24131739829               26022243175                3076448838  #>          Litoria_rheocola       Litoria_nyakalensis      Litoria_infrafrenata  #>               24884175617               20589961515               84850742051"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Evolutionary distinctiveness for raster data — rast.ed","title":"Calculate Evolutionary distinctiveness for raster data — rast.ed","text":"function calculates evolutionary distinctiveness according fair-proportion index.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Evolutionary distinctiveness for raster data — rast.ed","text":"","code":"rast.ed(x, tree, edge.path, branch.length, n.descen, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Evolutionary distinctiveness for raster data — rast.ed","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. tree phylo. dated tree. edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. Named numeric vector branch length species. See phylo.pres n.descen numeric. Named numeric vector number descendants branch. See phylo.pres filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Evolutionary distinctiveness for raster data — rast.ed","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Evolutionary distinctiveness for raster data — rast.ed","text":"Isaac, N. J., Turvey, S. T., Collen, B., Waterman, C. Baillie, J. E. (2007). Mammals EDGE: conservation priorities based threat phylogeny. PLoS ONE 2, e296.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Evolutionary distinctiveness for raster data — rast.ed","text":"Gabriela Alves-Ferreira Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Evolutionary distinctiveness for raster data — rast.ed","text":"","code":"library(terra) library(phyloraster) x <- rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) # phylogenetic tree tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\")) data <- phylo.pres(x, tree) ed <- rast.ed(data$x, edge.path = data$edge.path,               branch.length = data$branch.length, n.descen = data$n.descen) plot(ed)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.ses.html","id":null,"dir":"Reference","previous_headings":"","what":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","title":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","text":"Calculates standardized effect size evolutionary distinctiveness. See Details information.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.ses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","text":"","code":"rast.ed.ses(   x,   tree,   edge.path,   branch.length,   n.descen,   spat_alg = \"bootspat_str\",   spat_alg_args = list(rprob = NULL, rich = NULL, fr_prob = NULL),   random = c(\"tip\", \"spat\")[2],   aleats = 10,   filename = \"\",   ... )"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.ses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. tree phylo. dated tree. edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. Named numeric vector branch length species. See phylo.pres n.descen numeric. Named numeric vector number descendants branch. See phylo.pres spat_alg function algorithm implementing desired randomization method. must work SpatRaster objects. See examples. Example functions work : bootspat_naive, bootspat_str, bootspat_ff. spat_alg_args List arguments passed randomization method chosen 'spat_alg'. See bootspat_naive, bootspat_str, bootspat_ff random character. character indicating type randomization. currently available randomization methods \"tip\", \"site\", \"species\" \"\" (site species). aleats positive integer. positive integer indicating many times calculation repeated. filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.ses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.ses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","text":"spatial randomization (spat) keeps richness exact samples species presences proportionally observed frequency (.e. number occupied pixels). randomization assign values cells nodata. phylogenetic randomization shuffles taxa names across taxa included phylogeny.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.ses.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","text":"Isaac, N. J., Turvey, S. T., Collen, B., Waterman, C. Baillie, J. E. (2007). Mammals EDGE: conservation priorities based threat phylogeny. PLoS ONE 2, e296. Laffan, S. W., Rosauer, D. F., Di Virgilio, G., Miller, J. T., González‐Orozco, C. E., Knerr, N., ... & Mishler, B. D. (2016). Range‐weighted metrics species phylogenetic turnover can better resolve biogeographic transition zones. Methods Ecology Evolution, 7(5), 580-588.","code":""},{"path":[]},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.ses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","text":"Neander M. Heming Gabriela Alves-Ferreira","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.ed.ses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evolutionary distinctiveness standardized for specie richness — rast.ed.ses","text":"","code":"library(phyloraster) library(SESraster) x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\")) t <- rast.ed.ses(x, tree, aleats = 3, random = \"spat\") terra::plot(t)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic diversity for raster data — rast.pd","title":"Calculate phylogenetic diversity for raster data — rast.pd","text":"Calculate sum branch length species present cell raster.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic diversity for raster data — rast.pd","text":"","code":"rast.pd(x, tree, edge.path, branch.length, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic diversity for raster data — rast.pd","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. tree phylo. dated tree. edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. Named numeric vector branch length species. See phylo.pres filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate phylogenetic diversity for raster data — rast.pd","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic diversity for raster data — rast.pd","text":"Faith, D. P. (1992). Conservation evaluation phylogenetic diversity. Biological conservation, 61(1), 1-10.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate phylogenetic diversity for raster data — rast.pd","text":"Neander Marcel Heming Gabriela Alves-Ferreira","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate phylogenetic diversity for raster data — rast.pd","text":"","code":"library(terra) library(phyloraster) x <- rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\")) data <- phylo.pres(x, tree) pd <- rast.pd(data$x, edge.path = data$edge.path, branch.length = data$branch.length) plot(pd)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.ses.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic diversity standardized for species richness — rast.pd.ses","title":"Phylogenetic diversity standardized for species richness — rast.pd.ses","text":"Calculates standardized effect size phylogenetic diversity. See Details information.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.ses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic diversity standardized for species richness — rast.pd.ses","text":"","code":"rast.pd.ses(   x,   tree,   edge.path,   branch.length,   spat_alg = \"bootspat_str\",   spat_alg_args = list(rprob = NULL, rich = NULL, fr_prob = NULL),   random = c(\"tip\", \"spat\")[2],   aleats = 10,   filename = \"\",   ... )"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.ses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylogenetic diversity standardized for species richness — rast.pd.ses","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. tree phylo. dated tree. edge.path matrix representing paths tree root tip. See phylo.pres branch.length numeric. Named numeric vector branch length species. See phylo.pres spat_alg function algorithm implementing desired randomization method. must work SpatRaster objects. See examples. Example functions work : bootspat_naive, bootspat_str, bootspat_ff. spat_alg_args List arguments passed randomization method chosen 'spat_alg'. See bootspat_naive, bootspat_str, bootspat_ff random character. character indicating type randomization. currently available randomization methods \"tip\", \"site\", \"species\" \"\" (site species). aleats positive integer. positive integer indicating many times calculation repeated. filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.ses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phylogenetic diversity standardized for species richness — rast.pd.ses","text":"SpatRaster SpatRaster. function returns observed phylogenetic diversity, mean simulations calculated n times, standard deviation simulations, standardized effect size (SES) phylogenetic diversity.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.ses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phylogenetic diversity standardized for species richness — rast.pd.ses","text":"spatial randomization (spat) keeps richness exact samples species presences proportionally observed frequency (.e. number occupied pixels). randomization assign values cells nodata. phylogenetic randomization shuffles taxa names across taxa included phylogeny. spatial randomization (spat) keeps richness exact samples species presences proportionally observed frequency (.e. number occupied pixels). randomization assign values cells nodata. phylogenetic randomization shuffles taxa names across taxa included phylogeny.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.ses.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phylogenetic diversity standardized for species richness — rast.pd.ses","text":"Faith, D. P. (1992). Conservation evaluation phylogenetic diversity. Biological conservation, 61(1), 1-10.","code":""},{"path":[]},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.ses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Phylogenetic diversity standardized for species richness — rast.pd.ses","text":"Gabriela Alves-Ferreira Neander Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pd.ses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phylogenetic diversity standardized for species richness — rast.pd.ses","text":"","code":"library(terra) library(phyloraster) library(SESraster) x <- rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\")) data <- phylo.pres(x, tree) t <- rast.pd.ses(data$x, edge.path = data$edge.path,                 branch.length = data$branch.length, aleats = 3, random = \"spat\") plot(t)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic endemism for raster data — rast.pe","title":"Calculate phylogenetic endemism for raster data — rast.pe","text":"Calculate sum inverse range size multiplied branch length species present raster data.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic endemism for raster data — rast.pe","text":"","code":"rast.pe(x, tree, inv.R, branch.length, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic endemism for raster data — rast.pe","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. tree phylo. dated tree. inv.R SpatRaster. Inverse range size. See inv.range branch.length numeric. Named numeric vector branch length species. See phylo.pres filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate phylogenetic endemism for raster data — rast.pe","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic endemism for raster data — rast.pe","text":"Laffan, S. W., Rosauer, D. F., Di Virgilio, G., Miller, J. T., González‐Orozco, C. E., Knerr, N., ... & Mishler, B. D. (2016). Range‐weighted metrics species phylogenetic turnover can better resolve biogeographic transition zones. Methods Ecology Evolution, 7(5), 580-588. Rosauer, D. . N., Laffan, S. W., Crisp, M. D., Donnellan, S. C. Cook, L. G. (2009). Phylogenetic endemism: new approach identifying geographical concentrations evolutionary history. Molecular ecology, 18(19), 4061-4072.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate phylogenetic endemism for raster data — rast.pe","text":"Gabriela Alves-Ferreira Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate phylogenetic endemism for raster data — rast.pe","text":"","code":"library(terra) library(phyloraster) x <- rast(system.file(\"extdata\", \"rast.presab.tif\", package = \"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package = \"phyloraster\")) pe <- rast.pe(x = x, tree) plot(pe)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.ses.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","title":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","text":"Calculates standardized effect size phylogenetic endemism. See Details information.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.ses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","text":"","code":"rast.pe.ses(   x,   tree,   branch.length,   inv.R,   spat_alg = \"bootspat_str\",   spat_alg_args = list(rprob = NULL, rich = NULL, fr_prob = NULL),   random = c(\"tip\", \"spat\")[2],   aleats = 10,   cores = 1,   filename = \"\",   ... )"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.ses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. tree phylo. dated tree. branch.length numeric. Named numeric vector branch length species. See phylo.pres inv.R SpatRaster. Inverse range size. See inv.range spat_alg function algorithm implementing desired randomization method. must work SpatRaster objects. See examples. Example functions work : bootspat_naive, bootspat_str, bootspat_ff. spat_alg_args List arguments passed randomization method chosen 'spat_alg'. See bootspat_naive, bootspat_str, bootspat_ff random character. character indicating type randomization. currently available randomization methods \"tip\", \"site\", \"species\" \"\" (site species). aleats positive integer. positive integer indicating many times calculation repeated. cores positive integer. cores > 1, 'parallel' package cluster many cores created used. can also supply cluster object. Ignored functions implemented terra C++ (see fun) filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.ses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.ses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","text":"spatial randomization (spat) keeps richness exact samples species presences proportionally observed frequency (.e. number occupied pixels). randomization assign values cells nodata. phylogenetic randomization shuffles taxa names across taxa included phylogeny.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.ses.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","text":"Rosauer, D. . N., Laffan, S. W., Crisp, M. D., Donnellan, S. C., & Cook, L. G. (2009). Phylogenetic endemism: new approach identifying geographical concentrations evolutionary history. Molecular ecology, 18(19), 4061-4072.","code":""},{"path":[]},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.ses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","text":"Gabriela Alves-Ferreira Neander Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.pe.ses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phylogenetic endemism standardized for specie richness — rast.pe.ses","text":"","code":"library(terra) library(phyloraster) library(SESraster) x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\")) data <- phylo.pres(x, tree) range.BL <- inv.range(data$x) t <- rast.pe.ses(x = data$x,  tree, aleats = 3, random = \"spat\") plot(t)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.sr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate species richness for raster data — rast.sr","title":"Calculate species richness for raster data — rast.sr","text":"Calculate species richness raster data.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.sr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate species richness for raster data — rast.sr","text":"","code":"rast.sr(x, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.sr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate species richness for raster data — rast.sr","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. filename character. Output filename. ... additional arguments passed passed calling function.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.sr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate species richness for raster data — rast.sr","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.sr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate species richness for raster data — rast.sr","text":"Gabriela Alves Ferreira Neander Marcel Heming","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.sr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate species richness for raster data — rast.sr","text":"","code":"if (FALSE) { x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) rse <- rast.sr(x) terra::plot(rse) }"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted endemism for raster data — rast.we","title":"Calculate weighted endemism for raster data — rast.we","text":"Calculate weighted endemism species present raster data.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted endemism for raster data — rast.we","text":"","code":"rast.we(x, inv.R, filename = \"\", ...)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted endemism for raster data — rast.we","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. inv.R SpatRaster. Inverse range size. See inv.range filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted endemism for raster data — rast.we","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate weighted endemism for raster data — rast.we","text":"Laffan, S. W., Rosauer, D. F., Di Virgilio, G., Miller, J. T., González‐Orozco, C. E., Knerr, N., ... & Mishler, B. D. (2016). Range‐weighted metrics species phylogenetic turnover can better resolve biogeographic transition zones. Methods Ecology Evolution, 7(5), 580-588. Williams, P.H., Humphries, C.J., Forey, P.L., Humphries, C.J., VaneWright, R.. (1994). Biodiversity, taxonomic relatedness, endemism conservation. : Systematics Conservation Evaluation (eds Forey PL, Humphries CJ, Vane-Wright RI), p. 438. Oxford University Press, Oxford. Crisp, M., Laffan, S., Linder, H., Monro, . (2001). Endemism Australian flora. Journal Biogeography, 28, 183–198.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate weighted endemism for raster data — rast.we","text":"Neander Marcel Heming Gabriela Alves Ferreira","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate weighted endemism for raster data — rast.we","text":"","code":"library(terra) library(phyloraster) x <- rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) inv.R <- inv.range(x) we <- rast.we(x, inv.R) plot(we)"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.ses.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted endemism standardized for species richness — rast.we.ses","title":"Calculate weighted endemism standardized for species richness — rast.we.ses","text":"Calculates standardized effect size weighted endemism. See Details information.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.ses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted endemism standardized for species richness — rast.we.ses","text":"","code":"rast.we.ses(   x,   inv.R,   spat_alg = \"bootspat_str\",   spat_alg_args = list(rprob = NULL, rich = NULL, fr_prob = NULL),   aleats = 10,   filename = \"\",   ... )"},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.ses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted endemism standardized for species richness — rast.we.ses","text":"x SpatRaster. SpatRaster containing presence-absence data (0 1) set species. layers (species) sorted according tree order. See phylo.pres function. inv.R SpatRaster. Inverse range size. See inv.range spat_alg function algorithm implementing desired randomization method. must work SpatRaster objects. See examples. Example functions work : bootspat_naive, bootspat_str, bootspat_ff. spat_alg_args List arguments passed randomization method chosen 'spat_alg'. See bootspat_naive, bootspat_str, bootspat_ff aleats positive integer. positive integer indicating many times calculation repeated. filename character. Output filename ... additional arguments passed terra::app","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.ses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted endemism standardized for species richness — rast.we.ses","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.ses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate weighted endemism standardized for species richness — rast.we.ses","text":"spatial randomization (spat) keeps richness exact samples species presences proportionally observed frequency (.e. number occupied pixels). randomization assign values cells nodata. phylogenetic randomization shuffles taxa names across taxa included phylogeny.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.ses.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate weighted endemism standardized for species richness — rast.we.ses","text":"Williams, P.H., Humphries, C.J., Forey, P.L., Humphries, C.J., VaneWright, R.. (1994). Biodiversity, taxonomic relatedness, endemism conservation. : Systematics Conservation Evaluation (eds Forey PL, Humphries CJ, Vane-Wright RI), p. 438. Oxford University Press, Oxford. Crisp, M., Laffan, S., Linder, H., Monro, . (2001). Endemism Australian flora. Journal Biogeography, 28, 183–198.","code":""},{"path":[]},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.ses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate weighted endemism standardized for species richness — rast.we.ses","text":"Neander Marcel Heming Gabriela Alves-Ferreira","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/rast.we.ses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate weighted endemism standardized for species richness — rast.we.ses","text":"","code":"library(terra) library(SESraster) x <- terra::rast(system.file(\"extdata\", \"rast.presab.tif\", package=\"phyloraster\")) t <- rast.we.ses(x, aleats = 3) plot(t)"},{"path":"https://gabferreira.github.io/phyloraster/reference/shp2rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Rasterize shapefile — shp2rast","title":"Rasterize shapefile — shp2rast","text":"function rasterize shapefile using parameters y, spatraster. argument y provided, resolution parameter ignored. argument ymask TRUE, y used mask x.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/shp2rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rasterize shapefile — shp2rast","text":"","code":"shp2rast(   x,   y = NULL,   sps.col,   ymask = FALSE,   background = NA,   touches = TRUE,   resolution,   values = 1,   filename = NULL,   ... )"},{"path":"https://gabferreira.github.io/phyloraster/reference/shp2rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rasterize shapefile — shp2rast","text":"x SpatVector two-column matrix (point coordinates) y SpatRaster sps.col character. variable name x. ymask SpatVector Mask used delimit region interest, like shapefile country example background numeric. Value put cells covered features x. Default NA touches logical. TRUE, cells touched lines polygons affected, just line render path, whose center point within polygon. touches=TRUE, add TRUE resolution numeric vector length 1 2 set spatial resolution (see res). argument used, arguments ncols nrows ignored values typically numeric vector length 1 nrow(x). length nrow(x) values recycled nrow(x). used x matrix. Can also matrix data.frame filename character. Output filename ... additional arguments passed fun","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/shp2rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rasterize shapefile — shp2rast","text":"SpatRaster","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/shp2rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rasterize shapefile — shp2rast","text":"","code":"library(terra)  shp <- terra::vect(system.file(\"extdata\", \"shps_iucn_spps_rosauer.shp\",                               package=\"phyloraster\"))  # create a polygon to use as mask with an extent e <- terra::ext(113, 123, -43.64, -33.90) p <- terra::as.polygons(e, crs=\"\") coun.crop <- terra::crop(p, terra::ext(shp)) # cut by the total extension of the polygons coun.rast <- terra::rasterize(coun.crop, terra::rast(terra::ext(shp), resolution = 0.5))  plot(coun.rast, col = \"green\")   # rasterizing with the mask of the polygon shp.t <- shp2rast(shp, y = coun.rast, sps.col = \"BINOMIAL\", ymask = TRUE, background = 0) plot(shp.t, col = c(\"grey\", \"green\"))   # rasterizing without using mask shp.t2 <- shp2rast(shp, sps.col = \"BINOMIAL\", ymask = FALSE, background = NA, resolution = 0.1) plot(shp.t2[[9]], col = c(\"grey\", \"green\"))"},{"path":"https://gabferreira.github.io/phyloraster/reference/tip.root.path.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute tree edge lengths and node paths from root to each tip — tip.root.path","title":"Compute tree edge lengths and node paths from root to each tip — tip.root.path","text":"Computation tree edge lengths node paths root tip calculate PD entire phylogeny (= sum edge branch lengths)","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/tip.root.path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute tree edge lengths and node paths from root to each tip — tip.root.path","text":"","code":"tip.root.path(tree)"},{"path":"https://gabferreira.github.io/phyloraster/reference/tip.root.path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute tree edge lengths and node paths from root to each tip — tip.root.path","text":"tree phylo. dated tree.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/tip.root.path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute tree edge lengths and node paths from root to each tip — tip.root.path","text":"returns list two components: matrix H1 representing paths tree root tip, edge.length numeric vector giving length branch tree. matrix algebra summation resulting vector gives whole-tree PD value.","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/tip.root.path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute tree edge lengths and node paths from root to each tip — tip.root.path","text":"Based algorithm FastXtreePhylo Peter D. Wilson","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/tip.root.path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute tree edge lengths and node paths from root to each tip — tip.root.path","text":"Peter Wilson","code":""},{"path":"https://gabferreira.github.io/phyloraster/reference/tip.root.path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute tree edge lengths and node paths from root to each tip — tip.root.path","text":"","code":"library(phyloraster) tree <- ape::read.tree(system.file(\"extdata\", \"tree.nex\", package=\"phyloraster\"))  fxtp <- tip.root.path(tree) H1 <- fxtp$H1 edge.length <- fxtp$edge.length # PD for the whole community pres <- rep(1, nrow(H1)) sum((crossprod(H1, pres)>0) * edge.length) #> [1] 14.86832  # PD for a random subset of the community pres <- sample(c(1, 0), nrow(H1), TRUE) sum((crossprod(H1, pres)>0) * edge.length) #> [1] 10.33252"},{"path":[]},{"path":"https://gabferreira.github.io/phyloraster/news/index.html","id":"phyloraster-19","dir":"Changelog","previous_headings":"","what":"phyloraster 1.9","title":"phyloraster 1.9","text":"Initial CRAN submission.","code":""},{"path":"https://gabferreira.github.io/phyloraster/news/index.html","id":"functions-1-9","dir":"Changelog","previous_headings":"","what":"functions","title":"phyloraster 1.9","text":"metrics vectorized functions randomizations using SESraster optimization phylo.pres() optimization geo.phylo.ses() optimization inv.range()","code":""}]
